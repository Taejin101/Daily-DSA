int lower_bound(vector<int>& a, int x) {
    int lo = 0;
    int hi = a.size() - 1;

    while (hi - lo > 1) {
        int mid = lo + (hi - lo) / 2;
        if (a[mid] < x) {
            lo = mid + 1;
        }
        else {
            hi = mid;
        }
    }

    if (x <= a[lo]) return lo;
    if (x <= a[hi]) return hi;

    return -1;
}

int upper_bound(vector<int>& a, int x) {
    int lo = 0;
    int hi = a.size() - 1;

    while (hi - lo > 1) {
        int mid = lo + (hi - lo) / 2;
        if (a[mid] <= x) {
            lo = mid + 1;
        }
        else {
            hi = mid;
        }
    }

    if (x < a[lo]) return lo;
    if (x < a[hi]) return hi;

    return -1;
}